{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "shell",
            "label": "CMake Configure (Debug)",
            "command": "bash",
            "args": [
                "-c",
                "mkdir -p ${workspaceFolder}/build/debug && cmake -S ${workspaceFolder} -B ${workspaceFolder}/build/debug -DCMAKE_BUILD_TYPE=Debug"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "detail": "Configure CMake project for Debug build"
        },
        {
            "type": "shell",
            "label": "CMake Configure (Release)",
            "command": "bash",
            "args": [
                "-c",
                "mkdir -p ${workspaceFolder}/build/release && cmake -S ${workspaceFolder} -B ${workspaceFolder}/build/release -DCMAKE_BUILD_TYPE=Release"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "detail": "Configure CMake project for Release build"
        },
        {
            "type": "shell",
            "label": "CMake Build (Debug)",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build/debug"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build/debug"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": "CMake Configure (Debug)",
            "detail": "Build the project in Debug mode"
        },
        {
            "type": "shell",
            "label": "CMake Build (Release)",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build/release"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build/release"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build"
            },
            "dependsOn": "CMake Configure (Release)",
            "detail": "Build the project in Release mode"
        },
        {
            "type": "shell",
            "label": "CMake Clean (Debug)",
            "command": "rm",
            "args": [
                "-rf",
                "${workspaceFolder}/build/debug",
                "${workspaceFolder}/output/debug"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "detail": "Clean the Debug build and output directories"
        },
        {
            "type": "shell",
            "label": "CMake Clean (Release)",
            "command": "rm",
            "args": [
                "-rf",
                "${workspaceFolder}/build/release",
                "${workspaceFolder}/output/release"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "detail": "Clean the Release build and output directories"
        },
        {
            "type": "shell",
            "label": "CMake Build and Run Tests (Debug)",
            "command": "ctest",
            "args": [
                "--test-dir",
                "${workspaceFolder}/build/debug",
                "--output-on-failure"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build/debug"
            },
            "problemMatcher": [],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "dependsOn": [
                "CMake Configure (Debug)",
                "CMake Build (Debug)"
            ],
            "dependsOrder": "sequence",
            "detail": "Build the project in Debug mode and run all unit tests"
        },
        {
            "type": "shell",
            "label": "CMake Build and Run Tests (Release)",
            "command": "ctest",
            "args": [
                "--test-dir",
                "${workspaceFolder}/build/release",
                "--output-on-failure"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build/release"
            },
            "problemMatcher": [],
            "group": {
                "kind": "test"
            },
            "dependsOn": [
                "CMake Configure (Release)",
                "CMake Build (Release)"
            ],
            "dependsOrder": "sequence",
            "detail": "Build the project in Release mode and run all unit tests"
        },
        {
            "type": "shell",
            "label": "Run MyToyDatabase (Release)",
            "command": "${workspaceFolder}/output/release/main",
            "args": [],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "group": {
                "kind": "build"
            },
            "dependsOn": [
                "CMake Configure (Release)",
                "CMake Build (Release)"
            ],
            "dependsOrder": "sequence",
            "detail": "Build and run the main application in Release mode"
        },
        {
            "type": "shell",
            "label": "Run Benchmarks (Release)",
            "command": "${workspaceFolder}/output/release/all_benchmarks",
            "args": [
                "--benchmark_format=console",
                "--benchmark_out=${workspaceFolder}/output/release/benchmark_results.json"
            ],
            "options": {
                "cwd": "${workspaceFolder}/output/release"
            },
            "problemMatcher": [],
            "group": {
                "kind": "test"
            },
            "dependsOn": [
                "CMake Configure (Release)",
                "CMake Build (Release)"
            ],
            "dependsOrder": "sequence",
            "detail": "Build the project in Release mode and run all benchmarks"
        }
    ]
}